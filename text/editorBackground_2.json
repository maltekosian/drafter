{"uidcounter":["Aq9X0","Jg82L","3jN71"],"game":{"notes":[{"uid":"Aq9X0","text":"Jg82L","ex":0,"ey":0,"title":"3jN71","connections":[]}],"startNote":"Aq9X0","mediamanager":{"defaultLanguage":"en","currentLanguage":"en","languages":["en"],"mediaLanguages":[{"language":"en","medias":[{"key":"Jg82L","value":"YmVjYXVzZSB0aGlzIGlzIGEgbXVzdCBoYXZlIGZvciB0aGUgZWRpdG9y"},{"key":"3jN71","value":"U3RhcnQgTm90ZSBvZiB0aGUgRWRpdG9y"}]}]}},"preferences":[{"name":"p_saveAndLoad","value":true},{"name":"p_exAndImport","value":true},{"name":"p_dropbox","value":true},{"name":"p_html5_game_engine","value":false},{"name":"p_canvas_game_engine","value":false},{"name":"p_editor_source","value":true},{"name":"p_projectTitle","value":""}],"code":"//first we are extending the Note class,\n//because we want add the background property\n//background is just a reference\n//the real data will be stored in the game.mediamanager\nNote.prototype.background = null;\n//also we have to overwrite the Note.load method\n//so we can load the background key\nNote.load = function() {\n //console.log(data);\n  this.uid = data['uid'];\n  for (var i = 0; i < data['connections'].length;i++) {\n   var connection = new Connection(data['connections'][i]['uid']);\n   connection.load(data['connections'][i]);\n   this.connections.push(connection);\n  }\n  this.text = data['text'];\n  this.title = data['title'];\n  this.ex = data['ex'];\n  this.ey = data['ey'];\n  if (typeof data['background'] != 'undefined') {\n  \tthis.background = data['background'];\n  }\n}\n//we have to cleare the screen\n//reload your prototype with sava/load or ex/impoert or dropbox\n//do not forget to save before testing\neditor.init();\n/**\na new function\njust show an alert to show it works\n*/\neditor.openNoteToBackground = function() {\n  //instead of this we should do:\n  //displaying all available notes of the game in a select\n  //with value=uid of a note and textnode the name of that note\n  //also add a upload file input here with the label select your background for note\n  //once a note is selected\n  //add a done button (show only if a note is selected)\n  //call the upload image function of the editor\n  //which has to be defined next\n  var child = createElement('div');\n  child.className = 'connectionBox';\n  child.setAttribute('id','backgroundBox');\n  getElement('editor').appendChild(child);\n  child.appendChild(createTextNode('To add a background, select a note:'));\n  child.appendChild(createElement('br'));\n  var child2 = createElement('select');\n  child2.setAttribute('id', 'selectBackground');\n  child2.setAttribute('name', 'selectBackground');\n  for (var i = 0; i < editor.game.notes.length; i++) {\n    var child3 = createElement('option');\n    child3.setAttribute('value', editor.game.notes[i].uid);\n    child3.appendChild(createTextNode(editor.game.notes[i].uid + ' ' + \n                                      editor.game.mediamanager.getMediaValue(editor.game.notes[i].title)));\n    child2.appendChild(child3);\n  }\n  child.appendChild(child2);\n  child.appendChild(createElement('br'));\n  child2 = createElement('input');\n  child2.setAttribute('type', 'file');\n  child2.setAttribute('id', 'backgroundFile');\n  child.appendChild(child2);\n  child2 = createElement('button');\n  child2.appendChild(createTextNode('X'));\n  child2.className = 'closeBoxButton';\n  child2.setAttribute('onclick', 'getElement(\\'editor\\').removeChild(' + 'getElement(\\'backgroundBox\\'));');\n  child.appendChild(child2);\n  child.appendChild(createElement('br'));\n  child2 = createElement('button');\n  child2.appendChild(createTextNode('done'));\n  child2.setAttribute('onclick','editor.closeNoteToBackground();');\n  child.appendChild(child2);\n};\neditor.closeNoteToBackground = function() {\n  alert('editor.closeNoteToBackground();');\n  //before the box closes fetch the data\n  \n  //now we should close\n  getElement('editor').removeChild(getElement('backgroundBox'));\n};\n//creating the 'background button' button\nvar child = createElement('button');\nchild.appendChild(createTextNode('background'));\nchild.style.cssFloat = 'left';\nchild.setAttribute('onclick','editor.openNoteToBackground();');\ngetElement('editorbar').appendChild(child);\n"}