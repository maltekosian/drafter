Providing comfort by leaving the comfort zone

  The browser online world is devided into linked gathered and gethering documents.
  Anything can be or should I say IS a document. The slightest sentence, any unimportant comment,
  a brief description, a picture of you, ..., your blog, ... the full report of 2013 citizen rights and rioats in the world, the history, todays news and odds, the future, all imaginable downto the abbyss of the unimaginalbe.
  Everything is visible, collectable, is a document.
  
  Mobile is not.
  Not this way.
  Mobile is an app-world, as we all know.
  Do we really do know this?
  Did we realize, what this does mean?
  App does mean appliction, limited and exclusive access, no share between different pages so to say contributeres.
  It disables you, the user, the customer of a service, degrades you to an consumer.
  Also mobile is a contact based world, personal connections. 
  Mobile is phone.
  It is called smart, because of the 'smart' access, but it is not so smart, clever, intelligent, accessible anyway.
  It is not your notebook, allthough it can make phone calls - still.
  Mobile is the limiting factor. It is a focus provider, a kind of key without a door to a full space of oppertunities.
  It is preselection  - upfront of your choice.
  It is more like a closet filled with to much stuff right from the start.
  It is a closed set, like the game, a match three, a multiple choice test machine.
  Preselected, no free speach, limited bandwith, easy to understand, but easilly misstaken as handy.

  ...

  Instead of isolation give consolation.
  
  reader needs writer
needs connection client to service vice versa
needs offline and online mode 
needs autor=user authentication
document must be unique identifyable
by date-autor combination
can or must be able to be used anonym instead in reader/consumer/local mode
  <script>
  //localStorage

  var app = {};
  /**a null userid defines reader mode only*/
  app.userid = null;
  app.store = localStorage;
  app.uidcounter = new Array();
  app.init = function() {
    vat uc = app.getItem('uidcounter');
    if (typeof uc != 'undefined' && uc != null)
    {
      app.uidcounter = JSOn.parse(atob(uc));
    }
    
  };
  app.hasUid = function(_u) {
    for (var i = 0; i < app.uidcounter.length; i++)
    {
      if (app.uidcounter[i] == _u)
      {
        return true;
      }
    }
    return false;
  };
  app.createUid = function() {
    var abc = 'abcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ';
    var uid = '';
    while (!isNaN(uid) || app.hasUid(uid) || uid.length < 5) {
      uid = '';
      for (var i = 0; i < 5; i++)
      {
        uid = uid + abc.substr(Math.floor(Math.random() * abc.legth));
      }
      if (!isNaN(uid))
      {
        uid = '_'+uid;
      }
    }
    app.uidcounter.push(uid);
    app.setItem('uidcounter',btoa(JSON.stringify(app.uidcounter))); 
    return uid;
  }
  app.removeUid = function(_u) {
    for (var i = app.uidcounter.length-1; i >= 0; i--)
    {
      if (app.uidcounter[i] == _u)
      {
        app.uidcounter.splice(i,1);
      }
    }
    app.setItem('uidcounter',btoa(JSON.stringify(app.uidcounter)));  
  }
  app.setItem = function(_u, _t) {
    app.store.setItem(_u,_t);
  };
  app.removeItem = function(_u) {
    app.store.removeItem(_u);
    app.removeUid(_u);
  };
  app.getItem = function(_u) {
    return app.store.getItem(_u);
  };
  app.addDocument = function(_doc) {
  
  }
  app.updateDocument = function(_u,_doc) {
  
  }
  app.getDocument = function(_u) {
  
  }
  app.removeDocument = function(_u) {
  
  }
  app.publishDocument = function(_u) {
  
  }
  app.unpublishDocument = function(_u) {
  
  }
  </script>
